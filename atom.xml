<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Pedro Jiménez's Blog]]></title>
  <link href="http://pedrojimenez.github.com/atom.xml" rel="self"/>
  <link href="http://pedrojimenez.github.com/"/>
  <updated>2013-02-07T11:22:19+01:00</updated>
  <id>http://pedrojimenez.github.com/</id>
  <author>
    <name><![CDATA[Pedro Jiménez Solís]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ONO Netgear Router: Losing SSH conections]]></title>
    <link href="http://pedrojimenez.github.com/blog/2013/02/07/ono-netgear-router-losing-ssh-conections/"/>
    <updated>2013-02-07T10:53:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2013/02/07/ono-netgear-router-losing-ssh-conections</id>
    <content type="html"><![CDATA[<center>
<img align=center
src="http://topjailbreakapps.info/wp-content/uploads/2010/02/SSH1.jpg">
</center>




<h2>Problemática</h2>


<p>Nos hemos mudado a una nueva oficina y tenemos la suerte de haber contratado
ONO 100 MB. La verdad que como línea de comunicaciones es excepcional. Pero
mientras trabajamos nos hemos encontrado con un problemilla de comunicaciones a
la hora de mantener las sesiones SSH activas.</p>

<p>Como casi todas las empresas TIC, nosotros tenenos servidores externos para
varios usos. El caso es que el equipo de Sistemas suele tener varias &#8220;consolas&#8221;
abiertas con múltiples conexiones <strong>SSH</strong>.</p>

<p>Antes de tener contratado <strong>ONO</strong> la verdad que no se nos cortaba la conexión
de dichas sesiones, pero ahora mismo no podemos dejarlas sin actividad más de
unos pocos minutos. Para poder mantener las sesiones abiertas deberemos
realizar algunos cambios o bien en la parte del Server o bien en la parte de
Cliente.</p>

<!-- more -->




<h3>Parte Cliente</h3>


<p>Usamos OpenSSH en todos nuestros equipos, así que la modificación es sencilla. Editamos <strong>.ssh/config</strong> (o /etc/ssh/ssh_config) y añadimos:</p>

<pre>
ServerAliveInterval 30
ServerAliveCountMax 60
</pre>


<p>Esto establecerá que el cliente enviará un mensaje de
mantenimiento de la conexión cada 30 segundos al
servidor, por lo que el NAT ya no lo considerará una
conexión inactiva. Y el segundo parámetro indicará que
se haga esto hasta 100 veces mientras no haya actividad
(30*60 = 1800s = 30 minutos).</p>

<h3>Parte Servidor</h3>


<p>Editamos el fichero <strong>/etc/ssh/sshd_config</strong> (puede estar en
otro sitio, dependiendo de la distribución de Linux) y añadimos al final:</p>

<pre>
ClientAliveInterval 30
ClientAliveCountMax 60
</pre>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Appendix: Chef-client log configuration after Bootstrap]]></title>
    <link href="http://pedrojimenez.github.com/blog/2013/02/06/appendix-chef-client-log-configuration-after-bootstrap/"/>
    <updated>2013-02-06T11:19:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2013/02/06/appendix-chef-client-log-configuration-after-bootstrap</id>
    <content type="html"><![CDATA[<center>
<img align=center
src="http://docs.opscode.com/_static/opscode_chef_html_logo.jpg">
</center>


<br />




<h2>Chef: Logs después de realizar un BootStrap</h2>


<p>Ya hemos visto en post anteriores como realizar la instalación de OpenStack
bien con un servidor de [Chef Hosted] bien con un servidor [Chef Privado].
También se realizó un post sobre la instalación de un Servidor de Chef Privado
a través de una gema de Ruby
<a href="http://pedrojimenez.github.com/blog/2013/01/29/installing-a-private-chef-server-via-knife-server/">knife-server</a>.</p>

<p>Bien, a la hora de depurar errores en cada ejecución del cliente de Chef la
salida está configurada por defecto para que lo haga en <strong>STDOUT</strong>. Sin embargo
en las instalaciones por paquetería de <strong>chef-client</strong> esta configuración se
sobreescribe con el valor que se especifique en <strong>/etc/default/chef-client</strong>,
que en nuestro caso será <strong>/var/log/chef/chef-client.log</strong>.</p>

<p>Valores por paquetería de /etc/chef/clint.rb</p>

<pre>
log_level          :info
log_location       STDOUT
</pre>


<p>Valores por paquetería de /etc/default/chef-client</p>

<pre>
LOGFILE=/var/log/chef/client.log
CONFIG=/etc/chef/client.rb
INTERVAL=1800
SPLAY=20
</pre>




<!-- more -->


<p>Más información sobre estas configuraciones en la página oficial de <a href="http://wiki.opscode.com/display/chef/Chef+Configuration+Settings">Opscode</a>.</p>

<p>Al realizar el despligue con <strong>SpiceWeasel</strong> la instalación del <strong>chef-client</strong>
se realiza con una gema y no por paquetería, por lo que no tendremos dicho
archivo en /etc/default.</p>

<p>Bastará con aplicar el valor que queramos para la ruta del fichero de log que
se desee y <strong>voilá</strong> volvemos a recibir los logs en cada una de las pasadas que
realice nuestro cliente contra el servidor de Chef que hayamos elegido.</p>

<p>Valores del fichero /etc/chef/client.rb</p>

<pre>
log_level        :info
log_location     "/var/log/chef/client.log"
chef_server_url  "http://192.168.1.64:4000"
validation_client_name "pjimenez-validator"
</pre>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Openstack Installation - librarian and spiceweasel  Part II - Private Chef Server]]></title>
    <link href="http://pedrojimenez.github.com/blog/2013/01/31/openstack-installation-librarian-and-spiceweasel-part-ii-private-chef-server/"/>
    <updated>2013-01-31T11:02:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2013/01/31/openstack-installation-librarian-and-spiceweasel-part-ii-private-chef-server</id>
    <content type="html"><![CDATA[<center>
<img align=center
src="http://docs.opscode.com/_static/opscode_chef_html_logo.jpg">
</center>


<br />


<h2>Eligiendo Servidor</h2>


<p>Como ya vimos en el post previo a este, hay una manera muy sencilla de instalar
un servidor de Chef mediante una Gema de Ruby, knife-server.</p>

<p>Ver: <a href="http://pedrojimenez.github.com/blog/2013/01/29/installing-a-private-chef-server-via-knife-server">http://pedrojimenez.github.com/blog/2013/01/29/installing-a-private-chef-server-via-knife-server</a></p>

<p>Nuestro objetivo real ahora mismo es realizar el despliegue de <strong>OpenStack</strong>, por
tanto cada cual deberá decidir cómo quiere instalarse el servidor propio de
Chef. Si es necesaria más información, se puede revisar la documentación
oficial de la gente de OpsCode.</p>

<p>Instalación: <a href="http://private-chef-docs.opscode.com/installation.html">http://private-chef-docs.opscode.com/installation.html</a></p>

<!-- more -->


<p>Continuamos entonces con el supuesto de tener ya nuestro Chef Server corriendo.
Ahora vamos a practicar magia, hagamos currar a nuestras herramientas.</p>

<h2>Librarian</h2>


<p>Por descontado que la parte de &#8220;librarian&#8221; es sencilla de manejar, tan solo
resta la decisión de qué cookbooks se quieren utilizar en nuestra
instalación. Los cookbooks genéricos se cogen de los recursos públicos de la comunidad de  OpsCode.</p>

<p>Cookbooks: <a href="http://community.opscode.com/cookbooks">http://community.opscode.com/cookbooks</a></p>

<blockquote><p>Desde aquí un agradecimiento especial a toda la gente que de manera pública o
privada contribuyen a tener un repositorio tan extenso de cookbooks.</p></blockquote>

<p>Sin embargo para la parte de los cookbooks de OpenStack hay mucha gente
contribuyendo a los públicos de OpsCode y/o desarrollando suyos propios.
Nuestro Chef Server y la infraestructura Cloud son tan flexible que nos da la
opción de elegir qué cookbooks queremos (o podéis hacer FORK de la parte de
GitHub y empezar vuestras aportaciones).</p>

<p>En nuestro caso utilizamos una mezcla entre la gente de RackSpace (rcbops), la
parte pública de OpsCode y otro subconjunto de cookbooks que hemos clonado y
usamos desde nuetro repositorio de Git (sea GitLAb o GitHub - Gracias @Sfrek).</p>

<p>Una vez instalada la gema ( ver post <a href="http://pedrojimenez.github.com/blog/2013/01/28/openstack-installation-librarian-and-spiceweasel-part-i-hosted-chef/">anterior</a> ) y con todos los cookbooks elegidos y cargados en nuestro <strong>Cheffile</strong> vamos a realizar la descarga de ellos dentro nuestro &#8220;openstack-chef-repo&#8221;.</p>

<pre>
cd src
git clone ssh://git@code.abadasoft.com:22822/openstack_chef_repo.git

librarian-chef update
</pre>


<p>Si todo está correctamente configurado , nos generaría una salida como ésta:</p>

<pre>
pjimenez@pedro-pruebas:~/openstack-chef-repo$ librarian-chef update
Installing apache2 (1.2.0)
Installing apt (1.5.0)
Installing aws (0.100.2)
Installing build-essential (1.1.2)
Installing openssl (1.0.0)
Installing mysql (1.3.0)
Installing postgresql (1.0.0)
Installing xfs (1.0.0)
Installing database (1.3.6)
Installing yum (1.0.0)
Installing erlang (1.1.0)
Installing ntp (1.2.0)
Installing openssh (1.1.0)
Installing rabbitmq (1.6.4)
Installing rsyslog (1.5.0)
Installing selinux (0.5.2)
Installing sysctl (0.1.0)
Installing osops-utils (1.0.12)
Installing keepalived (1.0.2)
Installing rabbitmq-openstack (1.0.9)
Installing collectd (1.0.12)
Installing monit (1.0.12)
Installing monitoring (0.0.12)
Installing keystone (1.0.15)
Installing glance (1.0.15)
Installing horizon (1.0.12)
Installing mysql-openstack (1.0.10)
Installing cinder (0.0.6)
Installing dsh (0.0.14)
Installing nova (1.0.17)
Installing nova-network (1.0.16)
</pre>


<p><strong>Contenido del Cheffile</strong>:</p>

<pre>
#!/usr/bin/env ruby
#^syntax detection

site 'http://community.opscode.com/api/v1'

cookbook 'ntp', '1.2.0'
cookbook 'openssh', '1.1.0'
cookbook 'apt', '1.5.0'
cookbook 'yum', '1.0.0'
cookbook 'build-essential', '1.1.2'
cookbook 'erlang', '1.1.0'
cookbook 'openssl', '1.0.0'
cookbook 'postgresql', '1.0.0'
cookbook 'aws', '0.100.2'
cookbook 'xfs', '1.0.0'
cookbook 'database', '1.3.6'
cookbook 'mysql', '1.3.0'
cookbook 'rabbitmq', '1.6.4'
cookbook 'apache2', '1.2.0'
cookbook 'selinux', '0.5.2'
cookbook 'rsyslog'

cookbook 'sysctl',
  :git => 'https://github.com/mattray/sysctl.git'
cookbook 'keepalived',
  :git => 'https://github.com/rcbops-cookbooks/keepalived.git'
cookbook 'monit',
  :git => 'https://github.com/rcbops-cookbooks/monit.git'
cookbook 'monitoring',
  :git => 'https://github.com/rcbops-cookbooks/monitoring.git'
cookbook 'dsh',
  :git => 'https://github.com/rcbops-cookbooks/dsh.git'
cookbook 'osops-utils',
  :git => 'git://github.com/Abadasoft/osops-utils.git'
cookbook 'rabbitmq-openstack',
  :git => 'git://github.com/Abadasoft/rabbitmq-openstack.git'
cookbook 'collectd',
  :git => 'ssh://git@code.abadasoft.com:22822/pjimenez/collectd.git',
  :ref => 'testing'
cookbook 'mysql-openstack',
  :git => 'https://github.com/Abadasoft/mysql-openstack.git'
cookbook 'keystone',
  :git => 'https://github.com/Abadasoft/keystone.git'
cookbook 'glance',
  :git => 'https://github.com/Abadasoft/glance.git'
cookbook 'nova',
  :git => 'ssh://git@code.abadasoft.com:22822/nova.git',
  :ref => 'testing'
cookbook 'horizon',
  :git => 'https://github.com/Abadasoft/horizon.git'
cookbook 'nova-network',
  :git => 'https://github.com/Abadasoft/nova-network.git'
cookbook 'cinder',
  :git => 'ssh://git@code.abadasoft.com:22822/cinder.git'
</pre>




<h2>SpiceWeasel</h2>


<p>Bien, repasemos nuestro estado. Tenemos un &#8220;openstack-chef-repo&#8221; clonado desde
GiT, hemos rellenado el fichero de librarian (Cheffile) con los cookbooks
elegidos, hemos ejecutado librarian y se handescargado dentro del directorio
&#8220;cookbooks&#8221; todas las recetas elegidas.</p>

<p>Ahora vamos a comenzar el despliegue, lo primero que necesitamos al igual que
en el paso del Servidor Hosted de Chef es configurar los parámetros de conexión
contra el servidor de Chef elegido. Al ser un servidor privado los parámetros
deben cambiar (ver archivo config.rb con las instrucciones).</p>

<p>En nuestro servidor de Chef ahora mismo está como cliente (y Admin) el usuario
<strong>pjimenez</strong>, ahora necesitamos crear otro nuevo: <strong>pjimenez-validator</strong> y darle
permisos de admin. Copiamos la clave privada que se genere a un fichero .pem
dentro del directorio:</p>

<pre>
openstack-chef-repo
|
\ _ validation.pem (clave del servidor de chef).
\ _ pjimenez-validator.pem (clave de usuario creada).
</pre>


<p>Seguimos los pasos del fichero de configuración y rellenamos con los valores
necesarios (file: config.rb)</p>

<pre>
# Setup steps with own chef server:
# 1. Change chef server URL
# 2. Create a chef client with <somename>-validator
# 3. Put <somename>-validator.pem in this directory
# 4. change "chef_organization" to <somename>
self.chef_organization = "pjimenez"
self.chef_url = "http://192.168.1.64:4000"
</pre>


<p>En nuestro ejemplo se ha creado un entorno de pruebas <strong>folsom-pre</strong> y se ha
generado su archivo <strong>folsom-pre.rb</strong> dentro del directorio environments.</p>

<p>Los roles que se van a utilizar son los que están publicados en el repositorio
oficial de Opscode: <a href="https://github.com/opscode/openstack-chef-repo">https://github.com/opscode/openstack-chef-repo</a>.</p>

<p>Nos falta rellenar el archivo principal de Spiceweasel: <strong>infraestructure.yml</strong></p>

<pre>
cookbooks:
- ntp: #used by base role
- openssh: #used by base role
- apt: #used by erlang
- yum: #used by erlang
- build-essential: # used by mysql
- rsyslog:
- erlang: #used by rabbitmq-server role
- rabbitmq: #used by rabbitmq-server role
- openssl: #used by mysql
- mysql: #used by mysql-master role
- postgresql: #required by database
- aws: #required by database
- xfs: #required by database
- database: #required by keystone
- monitoring: #used by horizon-server role
- apache2: #required by horizon
- selinux: #required by nova
- sysctl: #required by nova
- osops-utils: #required by keystone
- mysql-openstack: #required by keystone
- rabbitmq-openstack: #required by keystone
- cinder: #used by horizon-server role
- keystone: #used by keystone role
- glance: #used by glance roles
- nova: #used by nova roles
- nova-network: #used by nova roles
- horizon: #used by horizon-server role
- keepalived: #used by horizon-server role
- dsh: #used by horizon-server role
- monit: #used by horizon-server role
- collectd: #used by horizon-server role

environments:
- folsom_pre:

data bags:

roles:
  - base:
  - mysql-master:
  - rabbitmq-server:
  - keystone:
  - glance-api:
  - glance-registry:
  - glance:
  - nova-setup:
  - nova-scheduler:
  - nova-api-ec2:
  - nova-api-os-compute:
  - nova-volume:
  - nova-vncproxy:
  - horizon-server:
  - single-controller:
  - single-compute:
  - allinone:
nodes:
- folsom-aio:
  run_list: role[base] role[allinone]
  options: -x root -P onetimepassword -E folsom_pre
</pre>


<p>Por fin &#8230; nos acercamos al momento estrella &#8230; Vamos a desplegar un entorno
completo con una máquina que hará de AllinOne:</p>

<pre>
spiceweasel infraestructure.yml | sh
</pre>


<blockquote><p>NOTAS:
La máquina que hará de allinone (folsom-aio) está resuelta en /etc/hosts.
Esta máquina sólo tiene instalado el Sistema Operativo y configurada la red.</p></blockquote>

<p>En unos minutos podréis acceder a la instalación completa de Openstack a través
del navegador: <a href="http://&lt;folsom-aio-ip">http://&lt;folsom-aio-ip</a>></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing a Private Chef Server via knife-server]]></title>
    <link href="http://pedrojimenez.github.com/blog/2013/01/29/installing-a-private-chef-server-via-knife-server/"/>
    <updated>2013-01-29T09:45:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2013/01/29/installing-a-private-chef-server-via-knife-server</id>
    <content type="html"><![CDATA[<center>
<img align=center
src="http://docs.opscode.com/_static/opscode_chef_html_logo.jpg">
</center>


<p>Existen varias maneras de instalar un servidor de Chef privado, bien sea en una
máquina virtual o física. Vamos a abordar una de ellas, la instalación del
servidor de Chef via la gema de &#8220;knife-server&#8221;.</p>

<p>Más información sobre instalaciones manuales de CHEF:
<a href="http://wiki.opscode.com/display/chef/Installing+Chef+Server+Manually">http://wiki.opscode.com/display/chef/Installing+Chef+Server+Manually</a></p>

<p>Será necesario tener un entorno RVM operativo y funcional. Para más información
se puede ampliar desde aquí: <a href="https://rvm.io/rvm/install/">https://rvm.io/rvm/install/</a>. La verdad que no es
el objetivo de este post explicar la instalación de dicho entorno.</p>

<!-- more -->


<p>Una vez realizado el <em>login</em> con el usuario del entorno RVM, pasaremos a la
instalación de la Gema. En un primer paso nos ha dado un error y nos ha
informado que:</p>

<pre>
pjimenez@pedro-pruebas:~$ gem install knife-server
Fetching: builder-3.1.4.gem (100%)
Fetching: excon-0.16.10.gem (100%)
Fetching: formatador-0.2.4.gem (100%)
Fetching: multi_json-1.5.0.gem (100%)
Fetching: net-scp-1.0.4.gem (100%)
Fetching: nokogiri-1.5.6.gem (100%)
Building native extensions.  This could take a while...
ERROR:  Error installing knife-server:
        ERROR: Failed to build gem native extension.

            /home/pjimenez/.rvm/rubies/ruby-1.9.3-p374/bin/ruby extconf.rb
            checking for libxml/parser.h... no
            -----
            libxml2 is missing.  please visit
            http://nokogiri.org/tutorials/installing_nokogiri.html for help
            with installing dependencies.
            -----
            *** extconf.rb failed ***
</pre>


<p>Siguiendo las instrucciones que nos aparecen en el enlace suministrado en el
log, se instalan los paquetes que faltan.</p>

<pre>
$ sudo apt-get install libxslt-dev libxml2-dev
</pre>


<p>Repetimos después la parte de la Gema.</p>

<pre>
pjimenez@pedro-pruebas:~$ gem install knife-server
Building native extensions.  This could take a while...
Fetching: ruby-hmac-0.4.0.gem (100%)
Fetching: fog-1.9.0.gem (100%)
Fetching: knife-ec2-0.6.2.gem (100%)
Fetching: knife-server-0.3.3.gem (100%)
Successfully installed nokogiri-1.5.6
Successfully installed ruby-hmac-0.4.0
Successfully installed fog-1.9.0
Successfully installed knife-ec2-0.6.2
Successfully installed knife-server-0.3.3
5 gems installed
Installing ri documentation for nokogiri-1.5.6...
Installing ri documentation for ruby-hmac-0.4.0...
Installing ri documentation for fog-1.9.0...
Installing ri documentation for knife-ec2-0.6.2...
Installing ri documentation for knife-server-0.3.3...
Installing RDoc documentation for nokogiri-1.5.6...
Installing RDoc documentation for ruby-hmac-0.4.0...
Installing RDoc documentation for fog-1.9.0...
Installing RDoc documentation for knife-ec2-0.6.2...
Installing RDoc documentation for knife-server-0.3.3...
</pre>


<p>Bien, primer reto conseguido. Ahora la parte mágica del asunto &#8230; la
instalación desatendida del servidor de Chef.</p>

<pre>
pjimenez@pedro-pruebas:~$ knife server bootstrap standalone --ssh-user root
--node-name chefpedro --host 192.168.1.64

WARNING: No knife configuration file found
WARNING: Failed to authenticate root - trying password auth
Enter password for root@192.168.1.64: 
Bootstrapping Chef on 192.168.1.64
...
</pre>


<p>Vemos que se ha generado el certificado de Servidor (validation.pem) así como
todos los archivos de configuración. Los clientes hay que crearlos aún.</p>

<pre>
root@chefpedro:/etc/chef# ll
total 48
drwxr-xr-x  4 chef chef 4096 ene 29 11:26 ./
drwxr-xr-x 99 root root 4096 ene 29 11:26 ../
drwx------  2 chef root 4096 ene 29 11:26 certificates/
-rw-r-----  1 chef chef 3002 ene 29 11:25 client.rb
-rw-r-----  1 chef chef 6296 ene 29 11:25 server.rb
drwxr-xr-x  2 chef chef 4096 ene 29 11:25 solr-jetty/
-rw-r-----  1 chef chef 2627 ene 29 11:25 solr.rb
-rw-------  1 chef chef 1679 ene 29 11:25 validation.pem
-rw-------  1 chef chef 1679 ene 29 11:25 webui.pem
-rw-r-----  1 chef chef 4470 ene 29 11:26 webui.rb
</pre>


<p>Vemos las versiones de paquetería utilizadas actualmente.</p>

<pre>
root@chefpedro:/etc/chef# dpkg -l | grep chef
ii  chef                                10.18.2-2                        A
systems integration framework, built to bring the benefits of configuration
management to your entire infrastructure.

ii  chef-expander                       10.18.2-1                        A
systems integration framework, built to bring the benefits of configuration
management to your entire infrastructure.

ii  chef-server                         10.18.2-1                        A
meta-gem to install all server components of the Chef configuration management
system

ii  chef-server-api                     10.18.2-1                        A
systems integration framework, built to bring the benefits of configuration
management to your entire infrastructure.

ii  chef-server-webui                   10.18.2-1                        A
systems integration framework, built to bring the benefits of configuration
management to your entire infrastructure.

ii  chef-solr                           10.18.2-1
Manages search indexes of Chef node attributes using SOLR
</pre>


<p>Ahora toca cacharrear con nuestro servidor &#8230; al navegador: <a href="http://chefpedro:4040">http://chefpedro:4040</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Openstack Installation - librarian and spiceweasel  Part I - Hosted Chef]]></title>
    <link href="http://pedrojimenez.github.com/blog/2013/01/28/openstack-installation-librarian-and-spiceweasel-part-i-hosted-chef/"/>
    <updated>2013-01-28T12:58:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2013/01/28/openstack-installation-librarian-and-spiceweasel-part-i-hosted-chef</id>
    <content type="html"><![CDATA[<center>
<img align=center
src="http://docs.opscode.com/_static/opscode_chef_html_logo.jpg">
</center>




<h2>¿ Quiénes son ?</h2>


<p>Hemos de detenernos un instante para hacer meción especial a las 2 maravillosas
gemas que nos harán la vida muy sencilla con OpenStack. Hablamos de &#8220;librarian&#8221;
y de &#8220;spiceweasel&#8221;. Para que la presentación sea bastante más oficial debemos
considerar que librarian será nuestro &#8220;cazador de cookbooks&#8221; y que spiceweasel
será el que los aplique contra el Servidor de Chef que elijamos, bien sea
público o privado. Además SpiceWeasel se encargará de aplicar roles/cookbooks a
los nodos directamente. Con esta pequeña &#8220;joya&#8221; se pueden hacer despliegues
verdaderamente veloces.</p>

<p><strong>Librarian</strong></p>

<p>Librarian-Chef is a bundler for infrastructure repositories using Chef. You can
use Librarian-Chef to resolve your infrastructure&#8217;s cookbook dependencies,
fetch them, and install them into your infrastructure repository.</p>

<p>Enlace: <a href="https://github.com/applicationsonline/librarian">https://github.com/applicationsonline/librarian</a></p>

<p><strong>SpiceWeasel</strong></p>

<p>Provides a CLI tool for generating knife commands to build Chef-managed
infrastructure from a simple JSON or YAML file.</p>

<p>Enlace: <a href="http://wiki.opscode.com/display/chef/Spiceweasel">http://wiki.opscode.com/display/chef/Spiceweasel</a></p>

<!-- more -->




<h2>Instalación</h2>


<p>Así pues para poder automatizar tareas de instalación los utilizaremos a ambos.
En la mayoría de los casos, la diferentes empresas como la nuestra, querrán
poder realizar modificaciones a los &#8220;cookbooks&#8221; o al menos seleccionar la
fuente desde la que descargarlos/utilizarlos.</p>

<h3>Librarian</h3>


<p>Necesitamos instalarlo como gema:</p>

<pre>
gem install librarian
</pre>


<p>Ahora entra en acción Librarian-Chef y su combinación con la estructura del
chef-repo oficial de OpsCode. Como primer paso necesitamos descargar dicho
repositorio desde GiT.</p>

<pre>
git clone https://www.github.com/cloudbau/openstack-chef-repo.git
</pre>


<p>En su contenido podremos especificarle desde dónde queremos descargar los
cookbooks que se van a procesar dentro de nuestro &#8220;chef-repo&#8221;.</p>

<pre>
PODEMOS VER COOKBOOKS DE LA COMUNIDAD:
site 'http://community.opscode.com/api/v1'
cookbook 'ntp', '1.2.0'
cookbook 'openssh', '1.1.0'
...

O ESPECIFICARLOS MANUALMENTE:
cookbook 'osops-utils',
  :git => 'https://github.com/cloudbau/chef-osops-utils.git'

cookbook 'rabbitmq-openstack',
  :git => 'https://github.com/mattray/rabbitmq-openstack.git'
</pre>


<p>Con la lista completa de los cookbooks que necesitamos para un despligue cloud,
&#8220;librarian&#8221; se encarga de descargarlos dentro de la estructura de nuestro repo.</p>

<pre>
operador@pedro-pruebas:~/openstack-chef-repo$ librarian-chef update
Installing apache2 (1.2.0)
Installing apt (1.5.0)
Installing aws (0.100.2)
Installing build-essential (1.1.2)
Installing openssl (1.0.0)
Installing mysql (1.3.0)
Installing postgresql (1.0.0)
Installing xfs (1.0.0)
Installing database (1.3.6)
Installing yum (1.0.0)
Installing erlang (1.1.0)
Installing ntp (1.2.0)
Installing openssh (1.1.0)
Installing rabbitmq (1.6.4)
Installing selinux (0.5.2)
Installing osops-utils (1.0.6)
Installing keystone (5.0.0)
Installing glance (5.0.0)
Installing horizon (5.0.0)
Installing sysctl (0.1.0)
Installing nova (5.0.0)
Installing mysql-openstack (1.0.4)
Installing rabbitmq-openstack (1.0.4)
</pre>




<h3>SpiceWeasel</h3>


<p>Se ha elegido en este primer post utiilzar el server hosted de Chef, aunque es
cierto que la próxima vez utilizaremos un chef-server propio. Para aquellos que
no tengan cuenta:
<a href="http://www.opscode.com/">http://www.opscode.com/</a></p>

<p>Una vez dentro hay que descargarse la clave privada del usuario elegido
(user.pem), y también la clave la organización (organizaction.pem) que se usarán para realizar la subida contra nuestro repo privado de Chef en OpsCode.</p>

<p>Hay que tener la gema instalada de nuevo:</p>

<pre>
gem install spiceweasel
</pre>


<p>Hay que modificar las opciones del servidor de Chef en el archivo &#8220;config.rb&#8221;.
Con los valores correctos de usuario / organización y teniendo las claves en el
mismo directorio raiz del &#8220;chef-repo&#8221; procedemos a subirlos.</p>

<pre><code class='bash'>
pjimenez@pedro-pruebas:~/openstack-chef-repo$ spiceweasel infrastructure.yml | sh

Uploading ntp          [1.2.0]
Uploaded 1 cookbook.
Uploading openssh        [1.1.0]
Uploaded 1 cookbook.
Uploading apt            [1.5.0]
Uploaded 1 cookbook.
Uploading yum            [1.0.0]
Uploaded 1 cookbook.
Uploading build-essential [1.1.2]
Uploaded 1 cookbook.
Uploading erlang         [1.1.0]
Uploaded 1 cookbook.
Uploading rabbitmq       [1.6.4]
Uploaded 1 cookbook.
Uploading openssl        [1.0.0]
Uploaded 1 cookbook.
Uploading mysql          [1.3.0]
Uploaded 1 cookbook.
Uploading postgresql     [1.0.0]
Uploaded 1 cookbook.
Uploading aws            [0.100.2]
Uploaded 1 cookbook.
Uploading xfs            [1.0.0]
Uploaded 1 cookbook.
Uploading database       [1.3.6]
Uploaded 1 cookbook.
Uploading apache2        [1.2.0]
Uploaded 1 cookbook.
Uploading selinux        [0.5.2]
Uploaded 1 cookbook.
Uploading sysctl         [0.1.2]
Uploaded 1 cookbook.
Uploading osops-utils    [1.0.6]
Uploaded 1 cookbook.
Uploading mysql-openstack [1.0.4]
Uploaded 1 cookbook.
Uploading rabbitmq-openstack [1.0.4]
Uploaded 1 cookbook.
Uploading keystone       [5.0.0]
Uploaded 1 cookbook.
Uploading glance         [5.0.0]
Uploaded 1 cookbook.
Uploading nova           [5.0.0]
Uploaded 1 cookbook.
Uploading horizon        [5.0.0]
Uploaded 1 cookbook.
Updated Environment production
Updated Role base!
Updated Role mysql-master!
Updated Role rabbitmq-server!
Updated Role keystone!
Updated Role glance-api!
Updated Role glance-registry!
Updated Role glance!
Updated Role nova-setup!
Updated Role nova-scheduler!
Updated Role nova-api-ec2!
Updated Role nova-api-os-compute!
Updated Role nova-volume!
Updated Role nova-vncproxy!
Updated Role horizon-server!
Updated Role single-controller!
Updated Role single-compute!
Updated Role allinone!
</code></pre>


<p>Si visitamos ahora la parte de &#8220;CookBooks&#8221; desde nuestra cuenta podremos ver la
lista de todos ellos, accesibles ahora de manera pública en OpsCode Hosted
Chef.</p>

<blockquote><p>NOTA: nos queda pendiente aplicar además la parte de NODOS, aunque eso será
para el próximo post, cuando además se haga con un servidor de Chef propio.</p>

<p>NOTA2: Con la versión nueva de la gema de Spiceweasel hay una modficación, en el
archivo de &#8220;infrastructure.yml&#8221;, en la parte de los Cookbooks hay un cambio en
la sintaxis:</p></blockquote>

<pre>
 ANTES:
 - ntp: #used by base role
  - 1.2.0

 DESPUÉS:
 - ntp: #used by base role
  version: 1.2.0
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu python-keystoneclient Dependency Error]]></title>
    <link href="http://pedrojimenez.github.com/blog/2012/12/12/ubuntu-python-keystoneclient-dependency-error/"/>
    <updated>2012-12-12T12:59:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2012/12/12/ubuntu-python-keystoneclient-dependency-error</id>
    <content type="html"><![CDATA[<p>Después de tener la infraestructura completa y funcional, nos encontramos ayer con un extraño error que no nos permitía el uso de Glance para poder hacer un &#8220;upload&#8221; de las imágenes. Nos encontramos con un error de dependencias en uno de los paquetes necesarios en la invocación de Glance.</p>

<p>Buscando algo más de información vemos que con la paquetería actual se llega a un error de versionado en el paquete <strong>python-keystoneclient</strong> y no permite que glance se ejecute.</p>

<pre>
root@controller:~# glance index
Traceback (most recent call last):
File "/usr/bin/glance", line 5, in <module>
from pkg_resources import load_entry_point
File "/usr/lib/python2.7/dist-packages/pkg_resources.py", line 2711, in <module>
parse_requirements(__requires__), Environment()
 File "/usr/lib/python2.7/dist-packages/pkg_resources.py", line 584, in resolve
raise DistributionNotFound(req)
pkg_resources.DistributionNotFound: python-keystoneclient>=0.1.2,<0.2
          
root@controller:~# glance image-list
Traceback (most recent call last):
File "/usr/bin/glance", line 5, in <module>
from pkg_resources import load_entry_point
File "/usr/lib/python2.7/dist-packages/pkg_resources.py", line 2711, in <module>
parse_requirements(__requires__), Environment()
File "/usr/lib/python2.7/dist-packages/pkg_resources.py", line 584, in resolve
raise DistributionNotFound(req)
pkg_resources.DistributionNotFound: python-keystoneclient>=0.1.2,<0.2
</pre>




<!-- more -->


<blockquote><p>AYUDA: Contactamos con nuestro Mcgyver personal, Gracias @achilued por la ayuda para ver la luz :)</p></blockquote>

<br />


<p>Lo primero vamos a comprobar con qué versión de paquetería contamos, tanto de los paquetes principales como de los auxiliares.</p>

<pre>
root@controller:~# dpkg -l | egrep 'nova|glance|python-keystone'
ii  glance                           2012.2.2+git201211300731~precise-0ubuntu1            OpenStack Image Registry and Delivery Service - Daemons
ii  glance-api                       2012.2.2+git201211300731~precise-0ubuntu1            OpenStack Image Registry and Delivery Service - API
ii  glance-common                    2012.2.2+git201211300731~precise-0ubuntu1            OpenStack Image Registry and Delivery Service - Common
ii  glance-registry                  2012.2.2+git201211300731~precise-0ubuntu1            OpenStack Image Registry and Delivery Service - Registry
ii  nova-api-ec2                     2012.2.2+git201212111304~precise-0ubuntu1            OpenStack Compute - EC2 API frontend
rc  nova-api-metadata                2012.2+git201210091907~precise-0ubuntu1              OpenStack Compute - metadata API frontend
ii  nova-api-os-compute              2012.2.2+git201212111304~precise-0ubuntu1            OpenStack Compute - OpenStack Compute API frontend
rc  nova-api-os-volume               2012.2+git201210091907~precise-0ubuntu1              OpenStack Compute - OpenStack Volume API frontend
ii  nova-cert                        2012.2.2+git201212111304~precise-0ubuntu1            OpenStack Compute - certificate management
ii  nova-common                      2012.2.2+git201212111304~precise-0ubuntu1            OpenStack Compute - common files
ii  nova-consoleauth                 2012.2.2+git201212111304~precise-0ubuntu1            OpenStack Compute - Console Authenticator
ii  nova-novncproxy                  2012.2.2+git201212111304~precise-0ubuntu1            OpenStack Compute - NoVNC proxy
ii  nova-scheduler                   2012.2.2+git201212111304~precise-0ubuntu1            OpenStack Compute - virtual machine scheduler
rc  nova-volume                      2012.2+git201210091907~precise-0ubuntu1              OpenStack Compute - storage
ii  python-glance                    2012.2.2+git201211300731~precise-0ubuntu1            OpenStack Image Registry and Delivery Service - Python library
ii  python-glanceclient              1:0.5.1.8.cdc06d9+git201210051430~precise-0ubuntu1   Client library for Openstack glance server.
ii  python-keystone                  2012.2.2+git201212061213~precise-0ubuntu1            OpenStack identity service - Python library
ii  python-keystoneclient            1:0.2.0.1.ge4ed1f3+git201211221523~precise-0ubuntu1  Client library for OpenStack Identity API
ii  python-nova                      2012.2.2+git201212111304~precise-0ubuntu1            OpenStack Compute Python libraries
ii  python-novaclient                1:2.9.0.49.gdc6285c+git201211221531~precise-0ubuntu1 client library for OpenStack Compute API
</pre>


<p>Vemos un apunte clarísimo y es que la versión del paquete <em>python-keystoneclient</em> es efectivamente superior a 0.2 , más concretamente se encuentra instalada la vesión <strong>0.2.0.1</strong> que al no cumplir con las exigencias del paquete Glance nos expulsa de su ejecución. Vamos a tirar un poco del hilo para ver si podemos arreglar este entuerto.</p>

<p>PASO 1: Se buscan las dependencias que tiene Glance y encontramos el directorio donde se aloja el cliente.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ root@controller:~# cat /usr/bin/glance
</span><span class='line'>
</span><span class='line'>#!/usr/bin/python
</span><span class='line'># EASY-INSTALL-ENTRY-SCRIPT: 'python-glanceclient==0.5.1.8.cdc06d9','console_scripts','glance'
</span><span class='line'>__requires__ = 'python-glanceclient==0.5.1.8.cdc06d9'
</span><span class='line'>import sys
</span><span class='line'>from pkg_resources import load_entry_point
</span><span class='line'>
</span><span class='line'>if __name__ == '__main__':
</span><span class='line'>    sys.exit(
</span><span class='line'>            load_entry_point('python-glanceclient==0.5.1.8.cdc06d9', 'console_scripts', 'glance')()
</span><span class='line'>          )</span></code></pre></td></tr></table></div></figure>


<p>PASO2: Dentro de dicho directorio editamos el fichero con las dependecias y se elimina la superior del paquete <strong>python-keystoneclient</strong>.</p>

<pre>
RUTA: /usr/lib/python2.7/dist-packages/python_glanceclient-0.5.1.8.cdc06d9.egg-info/requires.txt 

CAMBIAMOS:
prettytable>=0.6,<0.7
python-keystoneclient>=0.1.2,<0.2
warlock<2

POR:
prettytable>=0.6,<0.7
python-keystoneclient>=0.1.2
warlock<2
</pre>


<p>PASO3: Comprobamos que Glance vuelve a operar con normalidad.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ glance index
</span><span class='line'>ID                                   Name                           Disk Format          Container Format     Size          
</span><span class='line'>------------------------------------ ------------------------------ -------------------- -------------------- --------------
</span><span class='line'>de4bdf11-5b5e-4ca7-a29c-2c38ebe07697 cirros-image                   qcow2                bare                        9761280</span></code></pre></td></tr></table></div></figure>


<p>Más información:
<a href="https://bugs.launchpad.net/openstack-manuals/+bug/1064449">https://bugs.launchpad.net/openstack-manuals/+bug/1064449</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef: Bootstrapping for first time]]></title>
    <link href="http://pedrojimenez.github.com/blog/2012/12/11/chef-bootstrapping-for-first-time/"/>
    <updated>2012-12-11T15:36:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2012/12/11/chef-bootstrapping-for-first-time</id>
    <content type="html"><![CDATA[<center>
<img align=center src="http://docs.opscode.com/_static/opscode_chef_html_logo.jpg">
</center>


<p>Hemos arrancado por fin nuestro laboratorio completamente con Chef y nos tocaba probar uno de los trucos/habilidades más asombrosas de Knife, BooTstrap.</p>

<p>Gracias a este comando podremos incluir a un nodo que no estuviera dado de alta en nuestra infraestructura desde alguno de los nodos de &#8220;administración&#8221;, completando su registro e instalando el software de Chef en dicho nodo. Además crea el fichero de configuración &#8220;client.rb&#8221; y los dos ficheros de claves, el de cliente (client.pem) y el del servidor (validation.pem) en el nodo.</p>

<pre>
[ coruscant:~ ] knife bootstrap 192.168.1.242 -x operador -P onetimepassword --sudo
Bootstrapping Chef on 192.168.1.242
192.168.1.242 [Tue, 11 Dec 2012 15:14:48 +0100] INFO: *** Chef 10.14.4 ***
192.168.1.242 [Tue, 11 Dec 2012 15:14:49 +0100] INFO: Client key /etc/chef/client.pem is not present - registering
192.168.1.242 [Tue, 11 Dec 2012 15:14:49 +0100] INFO: HTTP Request Returned 404 Not Found: Cannot load node compute02
192.168.1.242 [Tue, 11 Dec 2012 15:14:50 +0100] INFO: Setting the run_list to [] from JSON
192.168.1.242 [Tue, 11 Dec 2012 15:14:50 +0100] INFO: Run List is []
192.168.1.242 [Tue, 11 Dec 2012 15:14:50 +0100] INFO: Run List expands to []
192.168.1.242 [Tue, 11 Dec 2012 15:14:50 +0100] INFO: Starting Chef Run for compute02
192.168.1.242 [Tue, 11 Dec 2012 15:14:50 +0100] INFO: Running start handlers
192.168.1.242 [Tue, 11 Dec 2012 15:14:50 +0100] INFO: Start handlers complete.
192.168.1.242 [Tue, 11 Dec 2012 15:14:50 +0100] INFO: Loading cookbooks []
192.168.1.242 [Tue, 11 Dec 2012 15:14:50 +0100] WARN: Node compute02 has an empty run list.
192.168.1.242 [Tue, 11 Dec 2012 15:14:50 +0100] INFO: Chef Run complete in 0.632681 seconds
192.168.1.242 [Tue, 11 Dec 2012 15:14:50 +0100] INFO: Running report handlers
192.168.1.242 [Tue, 11 Dec 2012 15:14:50 +0100] INFO: Report handlers complete
</pre>




<!-- more -->


<p>A partir de este momento desde el propio Chef Server se introduce el nodo en el entorno deseado (Folsom en nuestro caso) y se le añaden los &#8220;Roles&#8221; que vaya a desempeñar.</p>

<blockquote><p>Se le podría pasar un archivo JSON (con la opción <strong>-j</strong>) para pasarle directamente el Entorno y los roles que se le van a aplicar. Dejo esta parte pendiente para un post posterior
que rellenaré un poco más adelante y cerrar así el círculo de la instalación distribuida con Chef/Knife.</p></blockquote>

<p>NOTA: Si existe el fichero de claves del cliente en la máquina destino , se generará un error</p>

<pre>
[ coruscant:~ ] knife bootstrap 192.168.1.242 -x operador -P operador --sudo
Bootstrapping Chef on 192.168.1.242
192.168.1.242 [Tue, 11 Dec 2012 15:07:23 +0100] INFO: *** Chef 10.14.4 ***
192.168.1.242 [Tue, 11 Dec 2012 15:07:23 +0100] INFO: HTTP Request Returned 401 Unauthorized: Failed to authenticate. Ensure that your client key is valid.
192.168.1.242 
192.168.1.242 ================================================================================
192.168.1.242 Chef encountered an error attempting to load the node data for "compute02"
192.168.1.242 ================================================================================
192.168.1.242 
192.168.1.242 Authentication Error:
192.168.1.242 ---------------------
192.168.1.242 Failed to authenticate to the chef server (http 401).
192.168.1.242 
192.168.1.242 Server Response:
192.168.1.242 ----------------
192.168.1.242 Failed to authenticate. Ensure that your client key is valid.
192.168.1.242 
192.168.1.242 Relevant Config Settings:
192.168.1.242 -------------------------
192.168.1.242 chef_server_url   "http://172.16.0.51:4000"
192.168.1.242 node_name         "compute02"
192.168.1.242 client_key        "/etc/chef/client.pem"
192.168.1.242 
192.168.1.242 If these settings are correct, your client_key may be invalid.
192.168.1.242 
192.168.1.242 [Tue, 11 Dec 2012 15:07:23 +0100] FATAL: Stacktrace dumped to /var/chef/cache/chef-stacktrace.out
192.168.1.242 [Tue, 11 Dec 2012 15:07:23 +0100] FATAL: Net::HTTPServerException: 401 "Unauthorized"
</pre>


<p>Fuente: <a href="http://wiki.opscode.com/display/chef/Knife+Bootstrap">http://wiki.opscode.com/display/chef/Knife+Bootstrap</a>
Fuente Alternativa: <strong>@Sfrek</strong> y <strong>@achilued</strong> (gracias por toda vuestra ayuda y paciencia)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cinder: Volume Creation Error in Folsom]]></title>
    <link href="http://pedrojimenez.github.com/blog/2012/12/05/cinder-volume-creation-error-in-folsom/"/>
    <updated>2012-12-05T17:45:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2012/12/05/cinder-volume-creation-error-in-folsom</id>
    <content type="html"><![CDATA[<center> 
    <img src="http://wiki.openstack.org/Icons?action=AttachFile&do=get&target=openstack-object-storage-icon.png" alt="Cinder">
    <img src="http://wiki.openstack.org/Icons?action=AttachFile&do=get&target=openstack-object-storage-icon.png" alt="Cinder">
    <img src="http://wiki.openstack.org/Icons?action=AttachFile&do=get&target=openstack-object-storage-icon.png" alt="Cinder">
</center>


<br /><br />


<p>Estamos inmersos en la automatización de las instalaciones de Openstack con Chef. Utilizamos actualmente una infraestructura muy sencilla con un Chef-Server local que vamos utilizando para diferentes clientes/laboratorios.</p>

<p>Una de las varias modificaciones que hemos tenido que realizar ha sido con el cookbook de Cinder. Nos hemos encontrado que después de tocar atributos en el &#8220;Rol&#8221; y el &#8220;Entorno&#8221; nos seguía dando error al crear el volumen desde consola. Más específicamente un error de iSCSI:</p>

<pre>
2012-12-05 17:01:19 4046 ERROR cinder.openstack.common.rpc.amqp [-] Exception during message handling
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp Traceback (most recent call last):
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp   File "/usr/lib/python2.7/dist-packages/cinder/openstack/common/rpc/amqp.py", line 276, in _process_data
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp     rval = self.proxy.dispatch(ctxt, version, method, **args)
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp   File "/usr/lib/python2.7/dist-packages/cinder/openstack/common/rpc/dispatcher.py", line 145, in dispatch
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp     return getattr(proxyobj, method)(ctxt, **kwargs)
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp   File "/usr/lib/python2.7/dist-packages/cinder/volume/manager.py", line 163, in create_volume
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp     volume_ref['id'], {'status': 'error'})
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp   File "/usr/lib/python2.7/contextlib.py", line 24, in __exit__
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp     self.gen.next()
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp   File "/usr/lib/python2.7/dist-packages/cinder/volume/manager.py", line 156, in create_volume
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp     model_update = self.driver.create_export(context, volume_ref)
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp   File "/usr/lib/python2.7/dist-packages/cinder/volume/driver.py", line 437, in create_export
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp     volume_path)
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp   File "/usr/lib/python2.7/dist-packages/cinder/volume/iscsi.py", line 145, in create_iscsi_target
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp     raise exception.ISCSITargetCreateFailed(volume_id=vol_id)
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp ISCSITargetCreateFailed: Failed to create iscsi target for volume volume-4e680c7b-b8f4-43b8-a766-1996a2537474.
2012-12-05 17:01:19 4046 TRACE cinder.openstack.common.rpc.amqp 
</pre>


<!-- more -->


<p>Buscando algo de información nos hemos topado con un pequeño <em>BUG</em>, muy sencillo, ya que es un error de interpretación de la sintaxis de un archivo de configuración (<em>/etc/tgt/targets.conf</em>). En él se indica con un comodín que añadan todas las opciones de configuración en archivos del directorio <em>/etc/tgt/conf.d/</em> &#8230; aunque parece que esta sintaxis no funciona:</p>

<pre>
ARCHIVO: /etc/tgt/targets.conf

Cambiamos esto:
include /etc/tgt/conf.d/*.conf
default-driver iscsi


Por los archivos que queramos incluir:
include /etc/tgt/conf.d/cinder_tgt.conf
include /etc/tgt/conf.d/nova_tgt.conf
default-driver iscsi
</pre>


<p>Realizamos un reinicio del servicio y volvemos a crear un volumen (Volume-Test03)</p>

<pre>
root@controller:~# cinder create --display-name LV_test03 --display-description "Testing Volume 03" 2
+---------------------+--------------------------------------+
|       Property      |                Value                 |
+---------------------+--------------------------------------+
|     attachments     |                  []                  |
|  availability_zone  |                 nova                 |
|      created_at     |      2012-12-05T16:33:35.452347      |
| display_description |          Testing Volume 03           |
|     display_name    |              LV_test03               |
|          id         | 6553512d-c25a-40a2-9a50-bb12d35b23bf |
|       metadata      |                  {}                  |
|         size        |                  2                   |
|     snapshot_id     |                 None                 |
|        status       |               creating               |
|     volume_type     |                 None                 |
+---------------------+--------------------------------------+
</pre>


<p>Comprobamos que ahora el volumen se ha creado de manera correcta</p>

<pre>
root@controller:~# cinder list
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+
|                  ID                  |   Status  | Display Name | Size | Volume Type | Bootable | Attached to |
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+
| 6553512d-c25a-40a2-9a50-bb12d35b23bf | available |  LV_test03   |  2   |     None    |          |             |
| df6949a3-beab-481c-ad43-3e6961dd1266 |   error   |  LV_test02   |  2   |     None    |          |             |
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+

LOG:
==> /var/log/cinder/cinder-api.log <==
2012-12-05 17:33:35 INFO cinder.api.openstack.wsgi [req-b65efc22-c141-4d7d-8b55-67d5e01ca6ca 0b4cf20489b74be5955824ea9df14d4d 13b18da27978481f893cbdd938d8d78f] POST http://172.16.172.4:8776/v1/13b18da27978481f893cbdd938d8d78f/volumes
2012-12-05 17:33:35 AUDIT cinder.api.openstack.volume.volumes [req-b65efc22-c141-4d7d-8b55-67d5e01ca6ca 0b4cf20489b74be5955824ea9df14d4d 13b18da27978481f893cbdd938d8d78f] Create volume of 2 GB
2012-12-05 17:33:35 DEBUG cinder.quota [req-b65efc22-c141-4d7d-8b55-67d5e01ca6ca 0b4cf20489b74be5955824ea9df14d4d 13b18da27978481f893cbdd938d8d78f] Created reservations ['3c601bff-5b57-440c-88fd-f81c54d47570', '060b181f-1ee5-4d0d-99da-985d5c094d34'] reserve /usr/lib/python2.7/dist-packages/cinder/quota.py:663
2012-12-05 17:33:35 4604 DEBUG cinder.openstack.common.rpc.amqp [-] Making asynchronous cast on cinder-scheduler... cast /usr/lib/python2.7/dist-packages/cinder/openstack/common/rpc/amqp.py:377
</pre>


<blockquote><p>   <em>NOTA</em>: Debe usarse un archivo &#8220;openrc&#8221;/&#8221;novarc&#8221; para cargar las variables de entorno y no tener que especificarslas a Cinder.</p>

<p>   <em>PROBLEMA</em>: en cada iteración de &#8220;Chef client&#8221; el archivo se regerará al valor erróneo. Cambiamos la plantilla para que adapte a las especificaciones arriba mencionadas.</p></blockquote>

<p> ARCHIVO: cinder/templates/default/targets.conf.erb</p>

<p> Cambiamos:</p>

<pre class=ruby>
 <% if %w{redhat centos fedora}.include?(node["platform"]) %>
 include /var/lib/cinder/volumes/*
 <% end %>
 <% if %w{debian ubuntu}.include?(node["platform"]) %>
 include /etc/tgt/conf.d/*.conf
 <% end %>
 default-driver iscsi
</pre>


<p> Por:</p>

<pre class=ruby>
 <% if %w{redhat centos fedora}.include?(node["platform"]) %>
 include /var/lib/cinder/volumes/*
 <% end %>
 <% if %w{debian ubuntu}.include?(node["platform"]) %>
 include /etc/tgt/conf.d/cinder_tgt.conf
 include /etc/tgt/conf.d/nova_tgt.conf
 <% end %>
 default-driver iscsi
</pre>


<p>Debo dar la gracias a la gente que ha estado siguiendo esto en Launchpad: <a href="https://bugs.launchpad.net/cinder/+bug/1057904">https://bugs.launchpad.net/cinder/+bug/1057904</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Database Access Error in Folsom]]></title>
    <link href="http://pedrojimenez.github.com/blog/2012/11/16/database-access-error-in-folsom/"/>
    <updated>2012-11-16T11:32:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2012/11/16/database-access-error-in-folsom</id>
    <content type="html"><![CDATA[<p>Después de darle muchas vueltas al asunto, el comodín que se utilizaba en Mysql 5.1 (versión usada Diablo and Essex) el conocido &#8220;%&#8221; ha comenzado a fallar. Nos encontramos con errores de acceso a las Bases de Datos que eran nuevos para mi hasta el momento. Revisando las bitácoras de instalaciones previas hemos visto que los permisos de acceso a las diferentes DataBases de Mysql han cambiado y se utiliza como única línea de permisos la siguiente:</p>

<pre>
mysql_database_user[keystone]: granting access with statement [GRANT all ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'onetimepassword']
</pre>


<p>Pero solamente con esta sentencia constatamos que el acceso desde otros nodos (multihost) nos daba error. Para solucionar estos problemas se ha probado a añadir sentencias extras de &#8220;GRANT&#8221; hasta que permitió dichas conexiones. Haciendo un resumen de todas ellas se ha modificado el cookbook de osops-utils para que añada una nueva sentencia de GRANT contra la dirección en la que se bindea el servicio de Mysql. De esta manera se podrá configurar el servicio de Base de Datos en HA y tener los accesos contra la &#8220;bind_address&#8221;.</p>

<pre>
Archivo "osops-utils/libraries/database.rb"

        mysql_database_user username do
          connection connection_info
          password pw
          database_name db_name
          host "#{mysql_info["bind_address"]}"
          privileges [:all]
          action :grant
        end
</pre>


<p>Se ha hecho un <em>Pull Request</em> a la gente de <em>Rcbops</em> con esta modificación.<a href="https://github.com/rcbops-cookbooks/osops-utils/pull/46#issuecomment-10194833">Enlace</a>.</p>

<p>Ahora mismo lo estoy usando en nuestro Chef Server en el despligue de Folsom y funciona &#8220;like a charm&#8221;. Nos genera dos sentencias de permisos para cada servicio (keystone/glance/nova/horizon).</p>

<pre>
INFO: Processing mysql_database_user[keystone] action grant (keystone::server line 24)
INFO: mysql_database_user[keystone]: granting access with statement [GRANT all ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'onetimepassword']
INFO: Processing mysql_database_user[keystone] action grant (keystone::server line 32)
INFO: mysql_database_user[keystone]: granting access with statement [GRANT all ON keystone.* TO 'keystone'@'172.16.172.4' IDENTIFIED BY 'onetimepassword']
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keystone user-role-list bug]]></title>
    <link href="http://pedrojimenez.github.com/blog/2012/11/15/keystone-user-role-list-bug/"/>
    <updated>2012-11-15T15:02:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2012/11/15/keystone-user-role-list-bug</id>
    <content type="html"><![CDATA[<p>Depurando el comportamiento de Keystone para solventar un error que me trae de cabeza en Glance, he visto que un nuevos comandos que se han añadido al servicio de Identidad en OpenStack (&#8220;keystone user-role-list&#8221;). Este comando nos permitirá extraer un listado de los usuarios/roles/tenants de un solo vistazo.</p>

<p>Problema: que ahora mismo no funciona como se espera. Tan solo muestra el listado de los roles que hay para el usurio que tenemos en las variables de entorno (cargadas en el fichero novarc o como queramos llamarlo). Necesitaba conocer dicho listado del usuario &#8220;glance&#8221; no del usuario &#8220;admin&#8221;. En una primera pasada vemos que el listado solamente nos permite obtener los del mismo usuario &#8220;admin&#8221;:</p>

<pre>
keystone role-list
+----------------------------------+----------------------+
|                id                |         name         |
+----------------------------------+----------------------+
| 06bc817f9b8647d3bb795c6a1107cff3 |    KeystoneAdmin     |
| 1e77a4036d42446aabcfc706759b732d | KeystoneServiceAdmin |
| 25fcba9f9b9a4982a77f70fd2c84fc31 |        admin         |
| 28941e6016ea488cad9e5e55fee7d8aa |        Member        |
+----------------------------------+----------------------+

keystone tenant-list
+----------------------------------+---------+---------+
|                id                |   name  | enabled |
+----------------------------------+---------+---------+
| 15eafea37ce24b42ab60b1fe0f882d98 | service |   true  |
| 18e181671f174cc1bce64e4370eea96a |  admin  |   true  |
+----------------------------------+---------+---------+

keystone user-list
+----------------------------------+------------+---------+-------+
|                id                |    name    | enabled | email |
+----------------------------------+------------+---------+-------+
| 4be33d2e90ad42ce867954b07aa7b908 |   admin    |   true  |       |
| 8c53cdc1f4354e77a8e2abd39728b20d |    nova    |   true  |       |
| bd9e78ff6ca84c7181f3f412a01597ed | monitoring |   true  |       |
| f6b72f21414246d0a924fc883e694f45 |   glance   |   true  |       |
+----------------------------------+------------+---------+-------+

keystone user-role-list
+----------------------------------+----------------------+----------------------------------+----------------------------------+
|                id                |         name         |             user_id              |            tenant_id             |
+----------------------------------+----------------------+----------------------------------+----------------------------------+
| 06bc817f9b8647d3bb795c6a1107cff3 |    KeystoneAdmin     | 4be33d2e90ad42ce867954b07aa7b908 | 18e181671f174cc1bce64e4370eea96a |
| 1e77a4036d42446aabcfc706759b732d | KeystoneServiceAdmin | 4be33d2e90ad42ce867954b07aa7b908 | 18e181671f174cc1bce64e4370eea96a |
| 25fcba9f9b9a4982a77f70fd2c84fc31 |        admin         | 4be33d2e90ad42ce867954b07aa7b908 | 18e181671f174cc1bce64e4370eea96a |
+----------------------------------+----------------------+----------------------------------+----------------------------------+
</pre>




<!-- more -->


<p>Para este listado el usuario sigue siendo el mismo: 4be33d2e90ad42ce867954b07aa7b908 y por un ratillo incluso pensé que el resto de usuarios no se habrían creado, pero no era realmente así. Un pequeño vistazo a la DB me lo dejó bien claro. Buscando algo de información sobre el comando (maravilla de doc oficial) y al hacer el &#8220;help&#8221; del comando me encontré que se puede especificar el usuario y el tenant.</p>

<p>Pues manos a la obra, ahora es viable sacar el resto de la información para completar lo que en un futuro será la salida estandar del comando. Tampoco estaría mal poder especificar uno de los dos parámetros, o bien el usuario o bien el tenant, pero os adelanto que no es así. Hay que especificar ambos.</p>

<pre>
keystone help user-role-list
usage: keystone user-role-list [--user-id <user-id>] [--tenant-id <tenant-id>]

List roles granted to a user

Optional arguments:
  --user-id <user-id>   List roles granted to a user
  --tenant-id <tenant-id>
                        List roles granted on a tenant

- - - - - - - - - - -
user Glance:
root@controller:/etc/glance# keystone user-role-list --user-id f6b72f21414246d0a924fc883e694f45 --tenant-id 15eafea37ce24b42ab60b1fe0f882d98
+----------------------------------+-------+----------------------------------+----------------------------------+
|                id                |  name |             user_id              |            tenant_id             |
+----------------------------------+-------+----------------------------------+----------------------------------+
| 25fcba9f9b9a4982a77f70fd2c84fc31 | admin | f6b72f21414246d0a924fc883e694f45 | 15eafea37ce24b42ab60b1fe0f882d98 |
+----------------------------------+-------+----------------------------------+----------------------------------+

user Nova:
root@controller:/etc/glance# keystone user-role-list  --user-id 8c53cdc1f4354e77a8e2abd39728b20d --tenant-id 15eafea37ce24b42ab60b1fe0f882d98
+----------------------------------+-------+----------------------------------+----------------------------------+
|                id                |  name |             user_id              |            tenant_id             |
+----------------------------------+-------+----------------------------------+----------------------------------+
| 25fcba9f9b9a4982a77f70fd2c84fc31 | admin | 8c53cdc1f4354e77a8e2abd39728b20d | 15eafea37ce24b42ab60b1fe0f882d98 |
+----------------------------------+-------+----------------------------------+----------------------------------+


Rol Admin: | 25fcba9f9b9a4982a77f70fd2c84fc31 |
</pre>


<p>Espero que os sirva para un apuro o para el debug de vuestra plataforma.</p>

<p>Enlaces:
<a href="http://docs.openstack.org/trunk/openstack-compute/admin/content/adding-users-tenants-and-roles-with-python-keystoneclient.html">http://docs.openstack.org/trunk/openstack-compute/admin/content/adding-users-tenants-and-roles-with-python-keystoneclient.html</a><br />
<a href="https://bugs.launchpad.net/python-keystoneclient/+bug/1058750">https://bugs.launchpad.net/python-keystoneclient/+bug/1058750</a><br />
<a href="http://www.gossamer-threads.com/lists/openstack/dev/19510">http://www.gossamer-threads.com/lists/openstack/dev/19510</a><br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu Keyring password and Folsom]]></title>
    <link href="http://pedrojimenez.github.com/blog/2012/11/15/ubuntu-keyring-password-and-folsom/"/>
    <updated>2012-11-15T11:16:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2012/11/15/ubuntu-keyring-password-and-folsom</id>
    <content type="html"><![CDATA[<p>Pues después de varios intentos con la infraestructura de Folsom, al final en todas ellas he conseguido llegar a este punto de error. Después de leer por ahí, la solución es bastante sencilla y se aplica de manea instantánea sobre línea de comandos.</p>

<p>Este error nos salta cuando tratamos de invocar los comandos de &#8220;nova&#8221; después de haber generado y cargado las variables de entorno en el fichero novarc (o el nombre que elijamos).</p>

<pre>
root@controller:~# nova list
Please set a password for your new keyring
</pre>


<p>Aunque metamos una contraseña, nos seguirá molestando con este error de manera continuada. Para evitarlo basta con añadir la línea de abajo al bashrc del usuario y volver a cargarlo.</p>

<pre>
Añadimos al /home/user/.bashrc y recargamos
export OS_NO_CACHE=1
source /home/user/.bashrc 
</pre>


<p>Comprobamos que se ejecutan los comandos de &#8220;nova&#8221;:</p>

<pre>
root@controller:/etc/nova# nova volume-list
+--------------------------------------+-----------+-----------------+------+-------------+-------------+
| ID                                   | Status    | Display Name    | Size | Volume Type | Attached to |
+--------------------------------------+-----------+-----------------+------+-------------+-------------+
| 850e5d38-dc87-4267-b3c9-9d02205f11ab | available | MiPrimerVolumen | 3    | None        |             |
+--------------------------------------+-----------+-----------------+------+-------------+-------------+
</pre>


<p>La segunda opción es ejecutar los comandos de &#8220;nova&#8221; con la opción <u>&#8211;no_cache</u>, aunque sobre el mismo entorno no he sido capaz de que funcione con dichas indicaciones.</p>

<pre>
root@controller:~# nova --no_cache volume-list
</pre>


<p>Enlaces:</p>

<p><a href="https://bugs.launchpad.net/python-novaclient/+bug/1020238">https://bugs.launchpad.net/python-novaclient/+bug/1020238</a></p>

<p><a href="https://lists.launchpad.net/openstack/msg16095.html">https://lists.launchpad.net/openstack/msg16095.html</a> (solución de Vish)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Primeros Pasos]]></title>
    <link href="http://pedrojimenez.github.com/blog/2012/10/31/primeros-pasos/"/>
    <updated>2012-10-31T12:03:00+01:00</updated>
    <id>http://pedrojimenez.github.com/blog/2012/10/31/primeros-pasos</id>
    <content type="html"><![CDATA[<p>Bueno por fin me he decidido a escribir algo de todo lo que hago y parte de lo que leo. He valorado un montón de opciones previas pero creo que Octopress se adapta perfectamente a mis necesidades. Es por supuesto software libre y como ya hemos visto desplegable dentro de una infraestructura PaaS.</p>

<p>Gracias a @achilued y a @Sfrek por el apoyo y los ánimos. Espero darle la vidilla que se merece ;)</p>
]]></content>
  </entry>
  
</feed>
